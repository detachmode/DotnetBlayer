#pragma checksum "/Users/dennismuller/.nuget/packages/blazaco/1.2.0/contentFiles/any/netstandard2.0/Editor/MonacoEditor.razor" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "fc2d9a1d934b6d362cfa18586aa52107da823291"
// <auto-generated/>
#pragma warning disable 1591
#pragma warning disable 0414
#pragma warning disable 0649
#pragma warning disable 0169

namespace Blayer.Shared.Editor
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using System.Net.Http;
    using System.IO;
    using Microsoft.AspNetCore.Components.Forms;
    using Microsoft.AspNetCore.Components.Layouts;
    using Microsoft.AspNetCore.Components.Routing;
    using DotnetBlayer;
    using Blazaco;
    using Blazaco.Editor;
    using Blazaco.Editor.Options;
    using Blayer.Shared.Components;
    using Microsoft.CodeAnalysis.CSharp.Scripting;
    using Microsoft.CodeAnalysis.Scripting;
    using Microsoft.CodeAnalysis;
    using Blayer.Shared;
    using Microsoft.AspNetCore.Components;
    using Microsoft.JSInterop;
    public class MonacoEditor : Microsoft.AspNetCore.Components.ComponentBase
    {
        #pragma warning disable 1998
        protected override void BuildRenderTree(Microsoft.AspNetCore.Components.RenderTree.RenderTreeBuilder builder)
        {
        }
        #pragma warning restore 1998
#line 13 "/Users/dennismuller/.nuget/packages/blazaco/1.2.0/contentFiles/any/netstandard2.0/Editor/MonacoEditor.razor"
            

    [Inject]
    IJSRuntime runtime { get; set; }

    [Parameter]
    EditorModel Model { get; set; }

    [Parameter]
    int Width { get; set; } = 800;

    [Parameter]
    int Height { get; set; } = 600;

    [Parameter]
    bool FullScreen { get; set; }

    private bool _alreadyRendered = false;

    protected override async Task OnAfterRenderAsync()
    {
        if (!_alreadyRendered)
        {
            _alreadyRendered = await BlazacoJSInterop.InitializeEditor(runtime, Model);
        }
    }

    public async Task<string> GetValue()
    {
        return await BlazacoJSInterop.GetValue(runtime, Model.Id);
    }

    public async Task<bool> SetValue(string newValue)
    {
        return await BlazacoJSInterop.SetValue(runtime, Model.Id, newValue);
    }

    public async Task<bool> SetTheme(string newTheme)
    {
        return await BlazacoJSInterop.SetTheme(runtime, Model.Id, newTheme);
    }

#line default
#line hidden
    }
}
#pragma warning restore 1591
